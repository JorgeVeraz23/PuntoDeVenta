// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Configurations.ApplicationVersion", b =>
                {
                    b.Property<long>("IdApplicationVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdApplicationVersion"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlatForm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdApplicationVersion");

                    b.ToTable("ApplicationVersions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", "SEG");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", "SEG");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", "SEG");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "SEG");

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "2c5e174e-3b0e-446f-86af-483d56fd7210"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UsersToken", "SEG");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Parameters.ParameterType", b =>
                {
                    b.Property<long>("IdTypeParameter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdTypeParameter"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTypeParameter");

                    b.ToTable("ParameterTypes");

                    b.HasData(
                        new
                        {
                            IdTypeParameter = 1L,
                            Active = true,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "",
                            IpRegister = "::1",
                            Name = "Configuracion envio Correo",
                            Orden = 1,
                            UserRegister = "CreacionInicial"
                        },
                        new
                        {
                            IdTypeParameter = 2L,
                            Active = true,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "",
                            IpRegister = "::1",
                            Name = "Parametros Geolocalización",
                            Orden = 2,
                            UserRegister = "CreacionInicial"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Parameters.Parameters", b =>
                {
                    b.Property<long>("IdParameter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdParameter"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Comentary")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnumParameter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("IdTypeParameter")
                        .HasColumnType("bigint");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<long?>("TypeParameterIdTypeParameter")
                        .HasColumnType("bigint");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdParameter");

                    b.HasIndex("TypeParameterIdTypeParameter");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            IdParameter = 1L,
                            Active = true,
                            DataType = 0,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnumParameter = "SendMailSmtp",
                            IdTypeParameter = 1L,
                            IpRegister = "::1",
                            Orden = 0,
                            UserRegister = "CreacionInicial",
                            Value = "smtp.office365.com"
                        },
                        new
                        {
                            IdParameter = 2L,
                            Active = true,
                            DataType = 0,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnumParameter = "SendMailPort",
                            IdTypeParameter = 1L,
                            IpRegister = "::1",
                            Orden = 0,
                            UserRegister = "CreacionInicial",
                            Value = "587"
                        },
                        new
                        {
                            IdParameter = 3L,
                            Active = true,
                            DataType = 0,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnumParameter = "SendMailUser",
                            IdTypeParameter = 1L,
                            IpRegister = "::1",
                            Orden = 0,
                            UserRegister = "CreacionInicial",
                            Value = "notificaciones@citikold.com"
                        },
                        new
                        {
                            IdParameter = 4L,
                            Active = true,
                            DataType = 0,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnumParameter = "SendMailPassword",
                            IdTypeParameter = 1L,
                            IpRegister = "::1",
                            Orden = 0,
                            UserRegister = "CreacionInicial",
                            Value = "C1t1k0ld*+"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "SEG");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            Active = true,
                            ConcurrencyStamp = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            DateDelete = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IpRegister = "::1",
                            Name = "Tester",
                            NormalizedName = "TESTER",
                            UserRegister = "Test@apptelink.com"
                        },
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7211",
                            Active = true,
                            ConcurrencyStamp = "2c5e174e-3b0e-446f-86af-483d56fd7211",
                            DateDelete = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IpRegister = "::1",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR",
                            UserRegister = "Test@apptelink.com"
                        },
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7212",
                            Active = true,
                            ConcurrencyStamp = "2c5e174e-3b0e-446f-86af-483d56fd7212",
                            DateDelete = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IpRegister = "::1",
                            Name = "Inspector",
                            NormalizedName = "INSPECTOR",
                            UserRegister = "Test@apptelink.com"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Bloqueo")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegistro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RutaFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioRegistro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "SEG");

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            Activo = true,
                            Bloqueo = false,
                            ConcurrencyStamp = "96e24203-c5ab-4493-a657-22c53f5b5659",
                            Email = "test@apptelink.com",
                            EmailConfirmed = true,
                            FechaRegistro = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IpRegistro = "::1",
                            LockoutEnabled = true,
                            NormalizedEmail = "TEST@APPTELINK.COM",
                            NormalizedUserName = "TEST@APPTELINK.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHLlVesXJKPW6QD+gMA/K7PG8CJYA/dJpiq2vDV848iNpsIzV1A2GVf4h4cQFkQ0Ew==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b7a8260b-c0cd-4d2b-bb5c-553774e025f2",
                            TwoFactorEnabled = false,
                            UserName = "test@apptelink.com",
                            UsuarioRegistro = "CreacionInicial"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.AuditoryAccess", b =>
                {
                    b.Property<long>("IdAuditoryAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdAuditoryAccess"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdAuditoryAccess");

                    b.ToTable("AuditoryAccesses");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.Menu", b =>
                {
                    b.Property<long>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdMenu"));

                    b.Property<string>("AbsoluteURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Controller")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("IdMenuFather")
                        .HasColumnType("bigint");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDownloadExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDownloadPDF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("RelativeURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("View")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdMenu");

                    b.HasIndex("IdMenuFather");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            IdMenu = 1L,
                            Active = true,
                            Code = "01",
                            ColorRef = "-",
                            Controller = "-",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Catálogos",
                            IpRegister = "Ip:..",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Catálogos",
                            Nivel = 1,
                            Orden = 1,
                            UserRegister = "CreacionInicial"
                        },
                        new
                        {
                            IdMenu = 2L,
                            Active = true,
                            Code = "01.001",
                            ColorRef = "-",
                            Controller = "Parametro",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parámetros",
                            IdMenuFather = 1L,
                            IpRegister = "Ip:..",
                            IsApproved = false,
                            IsCreate = true,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = true,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Parámetros",
                            Nivel = 2,
                            Orden = 1,
                            RelativeURL = "~/Parametro/Index",
                            UserRegister = "CreacionInicial",
                            View = "Index"
                        },
                        new
                        {
                            IdMenu = 3L,
                            Active = true,
                            Code = "01.002",
                            ColorRef = "-",
                            Controller = "Empresa",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Empresa",
                            IdMenuFather = 1L,
                            IpRegister = "Ip:..",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = true,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Empresa",
                            Nivel = 2,
                            Orden = 2,
                            RelativeURL = "~/Empresa/Index",
                            UserRegister = "CreacionInicial",
                            View = "Index"
                        },
                        new
                        {
                            IdMenu = 4L,
                            Active = true,
                            Code = "02",
                            ColorRef = "-",
                            Controller = "dashboard",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Icon = "GlobeAltIcon",
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Mantenimiento",
                            Nivel = 1,
                            Orden = 2,
                            UserRegister = "CreacionInicial",
                            View = "paises"
                        },
                        new
                        {
                            IdMenu = 5L,
                            Active = true,
                            Code = "02.01",
                            ColorRef = "-",
                            Controller = "",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Icon = "WrenchScrewdriverIcon",
                            IdMenuFather = 4L,
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Parametrizaciones",
                            Nivel = 2,
                            Orden = 1,
                            UserRegister = "CreacionInicial",
                            View = ""
                        },
                        new
                        {
                            IdMenu = 6L,
                            Active = true,
                            Code = "02.02",
                            ColorRef = "-",
                            Controller = "",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Icon = "GlobeAltIcon",
                            IdMenuFather = 4L,
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Localización",
                            Nivel = 2,
                            Orden = 2,
                            UserRegister = "CreacionInicial",
                            View = ""
                        },
                        new
                        {
                            IdMenu = 7L,
                            Active = true,
                            Code = "02.02.001",
                            ColorRef = "-",
                            Controller = "dashboard",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Catálogos de Países",
                            Icon = "GlobeAltIcon",
                            IdMenuFather = 6L,
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            Name = "Países",
                            Nivel = 3,
                            Orden = 1,
                            UserRegister = "CreacionInicial",
                            View = "paises"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.MenuRole", b =>
                {
                    b.Property<long>("IdMenuRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdMenuRole"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdMenu")
                        .HasColumnType("bigint");

                    b.Property<string>("IdRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDownloadExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDownloadPDF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMenuRole");

                    b.HasIndex("IdMenu");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRoles");

                    b.HasData(
                        new
                        {
                            IdMenuRole = 1L,
                            Active = true,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMenu = 4L,
                            IdRole = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            UserRegister = "CreacionInicial"
                        },
                        new
                        {
                            IdMenuRole = 2L,
                            Active = true,
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMenu = 6L,
                            IdRole = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = false,
                            IsDownloadExcel = false,
                            IsDownloadPDF = false,
                            IsEdit = false,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            UserRegister = "CreacionInicial"
                        },
                        new
                        {
                            IdMenuRole = 3L,
                            Active = true,
                            DateRegister = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMenu = 7L,
                            IdRole = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            IpRegister = "0.0.0.0",
                            IsApproved = false,
                            IsCreate = true,
                            IsDownloadExcel = true,
                            IsDownloadPDF = false,
                            IsEdit = true,
                            IsPrint = false,
                            IsProcess = false,
                            IsSendEmail = false,
                            IsVisible = true,
                            UserRegister = "CreacionInicial"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Templates.EmailTemplate", b =>
                {
                    b.Property<long>("IdEmailTemplate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdEmailTemplate"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("Body");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enumerator")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Params")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEmailTemplate");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            IdEmailTemplate = 1L,
                            Active = true,
                            Body = "Saludos cordiales,<br>Estimado {0} su contraseña ha sido reestablecido<br>Nueva contraseña:{1}<br>Gracias por su atención.",
                            DateRegister = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enumerator = "recuperarContrasenia",
                            IpRegister = "::1",
                            Params = "",
                            Subject = "[Nomina PRO] Reseteo de contraseña",
                            UserRegister = "Test@apptelink.com"
                        });
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Utilities.BucketFile", b =>
                {
                    b.Property<long>("IdBucketFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdBucketFile"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Sync")
                        .HasColumnType("bit");

                    b.Property<string>("TempFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBucketFile");

                    b.ToTable("BucketFiles");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Utilities.Logs", b =>
                {
                    b.Property<long>("IdLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdLog"));

                    b.Property<string>("Ambiente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerException")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plataform")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestTraceIdentifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StackStrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLog");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Utilities.Notificacion", b =>
                {
                    b.Property<long>("IdNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdNotification"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUserOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JsonUsersDestinatarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserDelete")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserModification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserRegister")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userOrigenId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdNotification");

                    b.HasIndex("userOrigenId");

                    b.ToTable("Notificacions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Parameters.Parameters", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Parameters.ParameterType", "TypeParameter")
                        .WithMany("Parameters")
                        .HasForeignKey("TypeParameterIdTypeParameter");

                    b.Navigation("TypeParameter");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.Menu", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.Menu", "MenuFather")
                        .WithMany()
                        .HasForeignKey("IdMenuFather");

                    b.Navigation("MenuFather");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.MenuRole", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("IdMenu");

                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId");

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Utilities.Notificacion", b =>
                {
                    b.HasOne("PuntoDeVentaData.Entities.Security.ApplicationUser", "userOrigen")
                        .WithMany()
                        .HasForeignKey("userOrigenId");

                    b.Navigation("userOrigen");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Parameters.ParameterType", b =>
                {
                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.ApplicationRole", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("PuntoDeVentaData.Entities.Security.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
